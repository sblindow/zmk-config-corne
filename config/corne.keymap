/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

//#include "keymap_german.h"

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

// keymap_german

#define DE_CIRC GRAVE // ^ (dead)
#define MAC_CIRC NUBS // ^ (dead | mac)
#define DE_1    N1    // 1
#define DE_2    N2    // 2
#define DE_3    N3    // 3
#define DE_4    N4    // 4
#define DE_5    N5    // 5
#define DE_6    N6    // 6
#define DE_7    N7    // 7
#define DE_8    N8    // 8
#define DE_9    N9    // 9
#define DE_0    N0    // 0
#define DE_SS   MINUS // ß
#define DE_ACUT EQUAL // ´ (dead)
// Row 2
#define DE_Q    Q    // Q
#define DE_W    W    // W
#define DE_E    E    // E
#define DE_R    R    // R
#define DE_T    T    // T
#define DE_Z    Y    // Z
#define DE_U    U    // U
#define DE_I    I    // I
#define DE_O    O    // O
#define DE_P    P    // P
#define DE_UDIA LBKT // Ü
#define DE_PLUS RBKT // +
// Row 3
#define DE_A    A    // A
#define DE_S    S    // S
#define DE_D    D    // D
#define DE_F    F    // F
#define DE_G    G    // G
#define DE_H    H    // H
#define DE_J    J    // J
#define DE_K    K    // K
#define DE_L    L    // L
#define DE_ODIA SEMI // Ö
#define DE_ADIA SQT  // Ä
#define DE_HASH NUHS // #
// Row 4
#define DE_LABK NUBS // <
#define MAC_LABK GRAVE // < (mac)
#define DE_Y    Z    // Y
#define DE_X    X    // X
#define DE_C    C    // C
#define DE_V    V    // V
#define DE_B    B    // B
#define DE_N    N    // N
#define DE_M    M    // M
#define DE_COMM COMMA // ,
#define DE_DOT  DOT  // .
#define DE_MINS FSLH // -

/* Shifted symbols
 * ┌───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───────┐
 * │ ° │ ! │ " │ § │ $ │ % │ & │ / │ ( │ ) │ = │ ? │ ` │       │
 * ├───┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─────┤
 * │     │   │   │   │   │   │   │   │   │   │   │   │ * │     │
 * ├─────┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┐    │
 * │      │   │   │   │   │   │   │   │   │   │   │   │ ' │    │
 * ├────┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴───┴────┤
 * │    │ > │   │   │   │   │   │   │   │ ; │ : │ _ │          │
 * ├────┼───┴┬──┴─┬─┴───┴───┴───┴───┴───┴──┬┴───┼───┴┬────┬────┤
 * │    │    │    │                        │    │    │    │    │
 * └────┴────┴────┴────────────────────────┴────┴────┴────┴────┘
 */
// Row 1
#define DE_DEG  LS(DE_CIRC) // °
#define MAC_DEG LS(MAC_CIRC) // °
#define DE_EXCL LS(DE_1)    // !
#define DE_DQT  LS(DE_2)    // "
#define DE_SECT LS(DE_3)    // §
#define DE_DLR  LS(DE_4)    // $
#define DE_PERC LS(DE_5)    // %
#define DE_AMPS LS(DE_6)    // &
#define DE_FSLH LS(DE_7)    // /
#define DE_LPAR LS(DE_8)    // (
#define DE_RPAR LS(DE_9)    // )
#define DE_EQL  LS(DE_0)    // =
#define DE_QUES LS(DE_SS)   // ?
#define DE_GRV  LS(DE_ACUT) // ` (dead)
// Row 2
#define DE_STAR LS(DE_PLUS) // *
// Row 3
#define DE_SQT  LS(DE_HASH) // '
// Row 4
#define DE_RABK LS(DE_LABK) // >
#define MAC_RABK LS(MAC_LABK) // > (mac)
#define DE_SEMI LS(DE_COMM) // ;
#define DE_COLN LS(DE_DOT)  // :
#define DE_UNDS LS(DE_MINS) // _

/* AltGr symbols
 * ┌───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───────┐
 * │   │   │ ² │ ³ │   │   │   │ { │ [ │ ] │ } │ \ │   │       │
 * ├───┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─────┤
 * │     │ @ │   │ € │   │   │   │   │   │   │   │   │ ~ │     │
 * ├─────┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┐    │
 * │      │   │   │   │   │   │   │   │   │   │   │   │   │    │
 * ├────┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴───┴────┤
 * │    │ | │   │   │   │   │   │   │ µ │   │   │   │          │
 * ├────┼───┴┬──┴─┬─┴───┴───┴───┴───┴───┴──┬┴───┼───┴┬────┬────┤
 * │    │    │    │                        │    │    │    │    │
 * └────┴────┴────┴────────────────────────┴────┴────┴────┴────┘
 */
// Row 1
#define DE_SUP2 RA(DE_2)    // ²
#define DE_SUP3 RA(DE_3)    // ³
#define DE_LBRC RA(DE_7)    // {
#define DE_LBKT RA(DE_8)    // [
#define DE_RBKT RA(DE_9)    // ]
#define DE_RBRC RA(DE_0)    // }
#define DE_BSLH RA(DE_SS)   // (backslash)
// Row 2
#define DE_AT   RA(DE_Q)    // @
#define DE_EURO RA(DE_E)    // €
#define DE_TILD RA(DE_PLUS) // ~
// Row 4
#define DE_PIPE RA(DE_LABK) // |
#define MAC_PIPE RA(MAC_LABK) // | (mac)
#define DE_MICR RA(DE_M)    // µ


//--------------------------------------------  Keymap ZMK

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // | ESC  |  Q  |  W  |  E  |  R   |  T  |   |  Z  |  U   |  I  |  O  |  P  |   Ü  |
            // | TAB  |  A  |  S  |  D  |  F   |  G  |   |  H  |  J   |  K  |  L  |  Ö  |   Ä  |
            // | SHFT |  Y  |  X  |  C  |  V   |  B  |   |  N  |  M   |  ,  |  .  |  -  | SHFT |
            //                    | CMD |(1)ENT|CTRL |   | OPT |(2)SPC|  3  |

            bindings = <
&kp ESC    &kp DE_Q  &kp DE_W  &kp DE_E  &kp DE_R    &kp DE_T       &kp DE_Z     &kp DE_U    &kp DE_I     &kp DE_O    &kp DE_P     &kp DE_UDIA
&kp TAB    &kp DE_A  &kp DE_S  &kp DE_D  &kp DE_F    &kp DE_G       &kp DE_H     &kp DE_J    &kp DE_K     &kp DE_L    &kp DE_ODIA  &kp DE_ADIA
&kp LSHFT  &kp DE_Y  &kp DE_X  &kp DE_C  &kp DE_V    &kp DE_B       &kp DE_N     &kp DE_M    &kp DE_COMM  &kp DE_DOT  &kp DE_MINS  &kp RSHFT
                               &kp LGUI  &lt 1 ENTER &kp LCTRL      &kp RALT     &lt 2 SPACE &mo 3
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |   °  |  !  |  "  |  §  |  $   |  %  |   |  &  |  /   | "(" | ")" |  =  |   ?  |
            // | TAB  |  1  |  2  |  3  |  4   |  5  |   |  6  |  7   |  8  |  9  |  0  |   ß  |
            // | BSPC |     |     |     |      |     |   |     |      |     |     |     | BSPC |
            //                    | GUI |(1)ENT| SPC |   | OPT |(2)SPC| ALT |

            bindings = <
&kp MAC_DEG &kp DE_EXCL   &kp DE_DQT    &kp DE_SECT   &kp DE_DLR    &kp DE_PERC     &kp DE_AMPS   &kp DE_FSLH       &kp DE_LPAR       &kp DE_RPAR  &kp DE_EQL  &kp DE_QUES
&kp TAB     &kp DE_1      &kp DE_2      &kp DE_3      &kp DE_4      &kp DE_5        &kp DE_6      &kp DE_7          &kp DE_8          &kp DE_9     &kp DE_0    &kp DE_SS
&kp BSPC    &none         &none         &none         &none         &none           &none         &none             &none             &none        &none       &kp BSPC
                                        &kp LGUI      &trans        &kp LCTRL       &kp RALT      &trans        &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |     |     |     |     |     |   |     |     |     |     |     | BKSP |
            // | CTRL |     |     |     |     |     |   | left|down | up  |right|  +  |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |  #  |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp    &kp     &kp        &kp        &kp          &kp             &kp             &kp           &kp              &kp       &kp BSPC
&kp LCTRL  &kp    &kp     &kp        &kp        &kp          &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &kp       &kp 
&kp LSHFT  &kp    &kp     &kp        &kp        &kp          &kp             &kp             &kp           &kp              &kp       &kp 
                          &kp LGUI   &trans     &kp LCTRL    &kp RALT        &trans          &trans
            >;
        };

        layer_3 {
            // -----------------------------------------------------------------------------------------
            // |  F1   |  F2  |  F3  |  F4  |  F5  |  F6  |   |  F7  |  F8  |  F9  |  F10  |  F11  |  F12 |
            // | F13   |  F14 |  F15 |  F16 |  F17 |  F18 |   |  F19 |  F20 |  F21 |  F22  |  F23  |  F24 |
            // | BT_CLR|  BT1 |  BT2 |  BT3 |  BT4 |      |   |      |      |      |       |       |      |
            //                       |      |      | SPC  |   | ENT  |      | ALT  |

            bindings = <
&kp F1      &kp F2        &kp F3         &kp F4        &kp F5          &kp F6        &kp F7   &kp F8   &kp F9   &kp F10  &kp F11  &kp F12
&kp F13     &kp F14       &kp F15        &kp F16       &kp F17         &kp F18       &kp F19  &kp F20  &kp F21  &kp F22  &kp F23  &kp F24
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1   &bt BT_SEL 2  &bt BT_SEL 3    &bt BT_SEL 4  &none    &none    &none    &none    &none    &none
                                         &kp LGUI      &trans          &kp LCTRL     &kp RALT &trans   &trans
            >;
        };
    };
};
